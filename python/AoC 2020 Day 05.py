# Databricks notebook source
# MAGIC %md https://adventofcode.com/2020/day/5

# COMMAND ----------

# MAGIC %md <article class="day-desc"><h2>--- Day 5: Binary Boarding ---</h2><p>You board your plane only to discover a new problem: you dropped your boarding pass! You aren't sure which seat is yours, and all of the flight attendants are busy with the flood of people that suddenly made it through passport control.</p>
# MAGIC <p>You write a <span title="No problem!">quick program</span> to use your phone's camera to scan all of the nearby boarding passes (your puzzle input); perhaps you can find your seat through process of elimination.</p>
# MAGIC <p>Instead of <a target="_blank" href="https://www.youtube.com/watch?v=oAHbLRjF0vo">zones or groups</a>, this airline uses <em>binary space partitioning</em> to seat people. A seat might be specified like <code>FBFBBFFRLR</code>, where <code>F</code> means "front", <code>B</code> means "back", <code>L</code> means "left", and <code>R</code> means "right".</p>
# MAGIC <p>The first 7 characters will either be <code>F</code> or <code>B</code>; these specify exactly one of the <em>128 rows</em> on the plane (numbered <code>0</code> through <code>127</code>). Each letter tells you which half of a region the given seat is in. Start with the whole list of rows; the first letter indicates whether the seat is in the <em>front</em> (<code>0</code> through <code>63</code>) or the <em>back</em> (<code>64</code> through <code>127</code>). The next letter indicates which half of that region the seat is in, and so on until you're left with exactly one row.</p>
# MAGIC <p>For example, consider just the first seven characters of <code>FBFBBFFRLR</code>:</p>
# MAGIC <ul>
# MAGIC <li>Start by considering the whole range, rows <code>0</code> through <code>127</code>.</li>
# MAGIC <li><code>F</code> means to take the <em>lower half</em>, keeping rows <code>0</code> through <code>63</code>.</li>
# MAGIC <li><code>B</code> means to take the <em>upper half</em>, keeping rows <code>32</code> through <code>63</code>.</li>
# MAGIC <li><code>F</code> means to take the <em>lower half</em>, keeping rows <code>32</code> through <code>47</code>.</li>
# MAGIC <li><code>B</code> means to take the <em>upper half</em>, keeping rows <code>40</code> through <code>47</code>.</li>
# MAGIC <li><code>B</code> keeps rows <code>44</code> through <code>47</code>.</li>
# MAGIC <li><code>F</code> keeps rows <code>44</code> through <code>45</code>.</li>
# MAGIC <li>The final <code>F</code> keeps the lower of the two, <em>row <code>44</code></em>.</li>
# MAGIC </ul>
# MAGIC <p>The last three characters will be either <code>L</code> or <code>R</code>; these specify exactly one of the <em>8 columns</em> of seats on the plane (numbered <code>0</code> through <code>7</code>). The same process as above proceeds again, this time with only three steps.  <code>L</code> means to keep the <em>lower half</em>, while <code>R</code> means to keep the <em>upper half</em>.</p>
# MAGIC <p>For example, consider just the last 3 characters of <code>FBFBBFFRLR</code>:</p>
# MAGIC <ul>
# MAGIC <li>Start by considering the whole range, columns <code>0</code> through <code>7</code>.</li>
# MAGIC <li><code>R</code> means to take the <em>upper half</em>, keeping columns <code>4</code> through <code>7</code>.</li>
# MAGIC <li><code>L</code> means to take the <em>lower half</em>, keeping columns <code>4</code> through <code>5</code>.</li>
# MAGIC <li>The final <code>R</code> keeps the upper of the two, <em>column <code>5</code></em>.</li>
# MAGIC </ul>
# MAGIC <p>So, decoding <code>FBFBBFFRLR</code> reveals that it is the seat at <em>row <code>44</code>, column <code>5</code></em>.</p>
# MAGIC <p>Every seat also has a unique <em>seat ID</em>: multiply the row by 8, then add the column. In this example, the seat has ID <code>44 * 8 + 5 = <em>357</em></code>.</p>
# MAGIC <p>Here are some other boarding passes:</p>
# MAGIC <ul>
# MAGIC <li><code>BFFFBBFRRR</code>: row <code>70</code>, column <code>7</code>, seat ID <code>567</code>.</li>
# MAGIC <li><code>FFFBBBFRRR</code>: row <code>14</code>, column <code>7</code>, seat ID <code>119</code>.</li>
# MAGIC <li><code>BBFFBBFRLL</code>: row <code>102</code>, column <code>4</code>, seat ID <code>820</code>.</li>
# MAGIC </ul>
# MAGIC <p>As a sanity check, look through your list of boarding passes. <em>What is the highest seat ID on a boarding pass?</em></p>
# MAGIC </article>

# COMMAND ----------

inp = '''FBFBFFFLLL
FFBBBBFLRR
BFBFBBBLLL
FFBBBBBLLL
BFFBBBBRLL
BBBFFBFRLL
FFBBFFFRRR
FFBFFBBLRL
FBFFBFBRRR
FBFFBFBRLL
BFFBFFFRLR
FFFBBFFRRR
BFBFBBFLLL
FBFBBFFRRL
BFFBFBFLRL
FBFFFBFRRL
FBFBFFBRRR
FBFBFFBRLL
BFBFFFBLLL
BFBFFBBLRL
FBFFFFBRRL
BFFFBFFRRL
FBFBFFFRLR
BFFFFBBLLR
FFBFFFFRLR
BBFBBFFLLL
FFBFFBFRRR
FBFBFBBRRR
BBBFFFFLRR
FFFBFFBRRR
BFFBFBFLRR
BFFFBBBRLL
FFBFBBBRLR
FBFFFFBLLR
FBBFBFFLRL
FBFFFFFRLL
FBBBBFBRLL
BFBBBBFLLL
FBBBFBBRRR
BFFFBFBLLL
FBBBBBFLRL
BFBBBFFLRR
BFBBFBBLRR
FFBBBFFLRR
FFBBBBFRLR
BFFFBFFLLR
FBBFFFBRRL
FBBBFBBLRR
FFBBFBFRRL
FFFBFBBLRR
FBFBBBBRLR
FBFFBFBLLL
FBBFFFFRLL
BBBFFFBLRL
FBBFBBBLLL
FFBBFBBLLR
FBFFFBBRLR
BBFBBFFRRL
FFFBBFFRLL
FBFFBBBLRL
BFFBFFFLRL
FFFFBBFRRR
FBBFBBFLLR
BFBFBFBRRL
BBFBFBBRRR
BBBFFFBLLL
BFBFFBFRLL
FFBBFFBRRR
BFBBFFFRRL
BFBBBFBRRL
BFBBBBBRRR
BBFBFBFRLL
BBFFBFFLRL
BFFBBFFLLL
BFBFBFFLLL
FBBBFFFRLR
BFFFBBBLRL
FBFBFFFLRR
FBBBFBBLRL
FFBBFBBRLR
FBBFFFFLRL
FFFBFBBLLL
FBFBFFBRRL
BBFFBBFRRR
BFFFFBFRLR
FBFBFFBLRL
FFBFFBBLLL
FBFBBFBRLR
BFFBBFBRLR
FFBFBFBLLL
FFBBFFBRLR
FBBBBBBLLL
FFFBBBBRRL
BFBBFBBRLL
BBFFFBFLLR
FFBBBBFRRR
BFBFFFBRLL
BFBFFBFLRR
FFFFBBBLLR
FBFFBBFRLL
FFFFBBBRRL
FFBFFBBLLR
FBFFFBBLLL
FFBBBBFRLL
BBFFBFFLLL
BFBBBBBRRL
BFFBFBFLLL
FFBFBBFLLR
FFBFBBBLRL
BFFBFFBLRL
FBBBFFFRRR
FBBFFBBRRL
FBBFFBBLLR
BBFBBBFLRR
BBFFFBFRRL
FBFBFBFRRL
FFBFBBFRRR
FBFFBBBLLR
BBFBFFBRLL
BFBBBFBLRL
FFBBFFFLRR
BFFFBFFLRL
BFFBBBFLLL
FBBFFFBLRL
BBBFFBFLLL
BFBBFBBRLR
FBBBBBFRLL
FBBBBFBLRR
FFBFBBFRLR
BBFFFFBLLL
FBFBBBFRLR
FBBFBBBLRL
BBFFBBBRLL
FFBFBFFLLR
FFFBBFBRLL
FFBBBFFRLL
BFBBFFFLRR
FBBBFBFRLL
BBFBFBFLRR
BFBBBFFRLL
FFBFFFFRRR
BFBBBBBLLR
FBBBBBBRRR
BBFBBFFLRR
BFBFFBBLRR
BFFBFBBLRR
BFFBBFFRLR
FBBBFFBRRR
FFFFBBBRLR
FBFFFFFLLL
BBFFFBFLRR
BFFFFBFLRL
BFFBFFBLLL
BFFBBFBRRL
FFFBBFFLLR
FBFFFFBLRL
FBFFFBFLLR
FFBBFBBRLL
FFBFFBBRLR
FFBFFFBRRL
FFFBFBFLRR
BBFFBFFRRR
BBFFFFFLLL
FBBFBFBRLR
BBFBBFBLLR
BBFBBBFRRL
BFBFFBBLLR
FBBFFFFLLR
FFBFBFFRRL
FFFBFFBRRL
FBFBFFBRLR
BFBBFBFRLL
BBFBBBBLLR
BFBBBFFLLL
BBFBBBBRRL
BFBFBFBRLR
BFFFBFBRRL
BFFBBBFRRL
BFFFBFBRLL
FBFBFBFLRR
FFBFFBFLRR
BBFBBBBRLL
BFBBBFFLRL
FBBBBFBLLL
BBFBBBFLRL
BFBBFBFLLL
FBBBBBBLRL
FFBFFFBLLL
FFBBBBBRRL
FBBFFFBLLL
FBBBFFBLRR
BBBFFBFLLR
FFFFBBBLLL
FBBBBBBRLR
FFBFFBBRRR
BFFFBFFRLL
BBBFFFBRRR
FBBFBFFLLL
FBFBFBBRLR
FBFFFFFLRL
FFBBBBBRLR
FBBBFFBRRL
BFBBBBFRRL
FBFBBFBLLR
BBFFBBBLLL
BBBFFBFRLR
FFBBFFFLLL
FFBFFBBRRL
FBBBBFFLLL
FBBBBBFRRR
FBFFBBFLLR
FFFBFFFLRL
FFFBFBBRRL
BFFFBFFLLL
FBBBFBBLLL
FFBFBBBLLL
BFFFFFBLRL
FBBBFBFLRR
BBFFBBFLLR
FBFFBBBRLR
BFBFFFFLLR
BFBBBFBLLL
BBFBFBBRLR
FFFBBFBLLR
BFFBFBBRRL
BBFFBBFLRR
BFFBBBFLRR
FBFBBBBRRL
BFBFBFFRRL
BBFBBFFRLR
BBFBBBBRLR
FFBBFFFLLR
BBFBFBBLRR
FBFBFBFLLL
BFFFFBBRRR
BFBBBBFRRR
BFFFFFFLRL
BBBFFBFLRR
FFFBBBBRLR
FBBFFFBRLL
BBFFBBFLRL
FFBBBBBRRR
BBFFBFFRLL
BFFFFFBRRR
FBBFBFBRRR
BFFFFBFRRR
FBBFBBBRLL
FFFBFBBRLR
FBBBBFFRLR
FBBFFFBLLR
FFBBFFBLLR
BFBFFFBLRR
FFBFBBBRRR
BFBFBFBLRR
BFFBBFBLRR
FBFFBFFRLL
BFFBBBFRLR
FBFFFBFRLR
FFFBFBFRLL
FBBFBBFLLL
BFBBFFFLRL
FBBFBFFLRR
BBFFFBFRRR
FBBFBFBLRL
FBBBFBFLLR
FBFBBBBLLR
BBBFFFFLLR
BFBBFBFRRR
FFBFBFFRLR
FFBBFBBLLL
BFFFFFBLLR
FBBBFBFLLL
FBBFBBFRLR
BBFFFFFRLL
BFBFBFFLRR
FBFBBFFLRR
BBFBBFBRLR
BFFFBBFRLR
FBFFBBFRRR
FBFFFBFLLL
FBBFBBBRRR
BBFFFBBLRL
FFBFFBFLLR
BBFFBFFLLR
BBBFFBFRRL
FBFBBFBRRR
FBBBBBBRLL
FBFFFBBLRR
FFFBFFFLLL
BBFBBFFRLL
BBFFFBFRLL
BBFFFBFLLL
FFBBFBBRRL
FFFFBBFLRL
BFBBBBFLRL
BBFBBFFLLR
BBFFBFBRRR
FBFBBFFRLL
FBFBBFBLLL
BFBBBFFRRR
FFBBBFBRLL
FFBFBBBRRL
BFBBFBFRLR
BBFBFBFRLR
FBFBBBFLLR
FBFBBBFLRL
BBFFBBFRLR
FFBBFFFLRL
FFFFBBFLRR
FFFBBFFLRL
FFFBFBFRRR
FBBFFBBLRR
BBFBBFBLRR
BFFBBBFLRL
FBFFBFFRLR
FBFFFBFRRR
BFFBBFFRRL
BFFFBBFRLL
BFBFBBBLRR
FFBFFFBLRL
FBFBBFBRLL
FBBBBFBLLR
FFBFBFBLRL
FBFBBBFLRR
FFBBBBBLRR
FFBFFFBLLR
BBFFFBBRLL
BBFFBBFLLL
FFFBBFBLRL
FBBBFBFRRR
BBFBBBBRRR
FBBBFFBLLR
FBBBBFBLRL
FBFBFFFRRL
FBBFFFFLRR
BFFFBFBLRL
BFFBFFBRLL
BFBFFFBLRL
FBFBFBFRLL
BBFBFBFLLL
FBBBBBFRRL
BFFBFFFRLL
FBBBFBBRRL
BFBBFFBRLR
FFBFBFFLLL
FFBBBBBLLR
FFBFBFBRRL
FFFBFFBLRL
BBFFFBFLRL
FBFBFBBRRL
BFFBFFBRRL
BBFBFBBLRL
BBFBFBFRRR
FBFFBBFRLR
FBFBBFBLRR
FBBFFFFLLL
FFFBFFFLRR
FFFBBBBRRR
BBFFFBBRLR
FFBFFFFRLL
FBFFBFBRLR
FBFBFBBRLL
FBBBBFFLRR
FBBFBFBRLL
FBBBFBFLRL
BBFBBBFLLR
FFBFBBBLLR
BFFBBBFRRR
FFBBFBFLLL
BFBBBFBRLR
FFBFBBBRLL
FFBFBFFLRR
FBFBFBBLLL
BFBBBBFLLR
FFBBFBFRRR
FBFBFBBLRR
BFFFBFBLLR
BFFBFBFRRL
FFFBBBFRLR
FFFBBFFRRL
FFFBBBFLRL
FFFFBBFLLL
BBBFFFBLRR
FBFFFFBRRR
FFFFBBFRRL
FBFBBFFRLR
BFFBBBBLRL
FBFFFFBLRR
FFFBBFBLRR
FFFFBBFRLL
FFFBBFBRRR
FBFFBBBRRL
BBFFFFFLRL
BBFFBBFRRL
BFFFBBBLLL
FBBBBBBLRR
FBBBFFFRLL
FBFFBFFLRR
FFBFBBFLLL
FFBBBFBRRR
BFFFBFBRRR
BBFFBFBRRL
BFFFBBBRLR
FBFFFBBRRR
BBFBBFBRLL
BBFFBBBRRR
FBFFBFBLLR
FFBFFBBLRR
FBBFBBFLRL
FFBFFBFLLL
FFFBFFFRRL
BBBFFFBRLL
BFBFBBBRRL
FFBFBFBLLR
FFFBBBFRLL
BFFFBBFRRR
BFBBFFFRLR
FBBFFBBRLL
BFBBBBBLRL
BBFBFBFLRL
BFBBBFBLLR
FBBFFBBRRR
BFFFFBBLRR
FBBFBBBLLR
BFBFBFBRLL
BFBFBFBRRR
BFFFFBFRRL
FBFBBFFLLR
FBBFBBFRRL
BBFBFBBLLL
BFFBFFBRRR
FBBFBFBLRR
BFFBBFBLLR
BFBFBBBRLL
FBFFBBBLRR
BBFFBFBLRR
BBFFFFFRLR
BBBFFBBLLR
BBFBBFFRRR
BBFFFBBLLR
BFFBFFBRLR
FBFFBFFLLL
BFBBFFFRLL
FFFBFBBRLL
FBFBFBBLRL
FFFBBBFRRL
BFBFBBFRLR
BBFFFFFRRL
FBBFBFFLLR
BFFFBBFLRR
BBFBBFBRRR
BBFFBBBLRR
FBFBBFFRRR
BFFFBFFRLR
FFBBFBFLLR
FBFBFFBLRR
FBFFBFBLRL
FFBFBFBRLR
FBBFBBBRRL
FFBBFFFRLR
FFFBFBBRRR
FBBFBFFRLL
FFBFBFFRLL
FFBFBBBLRR
FFBBBFFLLR
BFBFFFFLRR
FFBBBFBLRL
BBFFFBBRRL
FFBFFBFRRL
FFBBBFBRLR
BFBFFBFLLL
BBFBBBFRLR
BFBFFBFRLR
FFBBBBBLRL
FFFBBFFLLL
BBFFBFFRRL
BFBBFBBLRL
BFFBFFFLRR
BBBFFFFLRL
BFBFFBBRLL
FBBBFFBLLL
FBBFFBBLLL
BBFFFFFLLR
FFBBFFBLRR
BFBBFBFLRR
BBFFFFFLRR
BFFBFBFLLR
FBFBBBBLLL
FBBBFFBRLR
FBBBFBBLLR
BFBFBBBLRL
BFFFBFBRLR
FBBFFBFRRR
BFFFBBFLLL
FFBFFFBRLR
FFBFFFBRRR
FFFBFFBRLR
BBFBFFFRLL
BFBFFBFRRL
BFBFBBFRRL
FBBBBBFLRR
BFFBBBBLRR
FFBFFBFLRL
BFBFBBFLRL
BFFFFFFLLR
FBFFBBBRRR
BFBFFBBRLR
FBBFBFFRLR
BFFBBBFLLR
BFBFFFBLLR
FFBFFFFRRL
FFFBBBBLRR
FFFBBFBLLL
BFFBFBBLLR
FBFFBFBLRR
FFFBBBBRLL
BBBFFFBRLR
BFBBFFFLLL
BFBBBFFLLR
BFBFBFFRRR
BFFFFBFLLR
FBBBBFBRLR
BFFBBBBRRL
FBFBFBFRLR
FFBFBBFRRL
BFFFBBFLLR
FFBBBFBLLL
FFBFBBFLRR
BFFFFBFLLL
FBBBBBFRLR
BBFBBBFLLL
FBFBBFBRRL
FFBBFBFRLL
BFBFFFFRRR
FBFFFFFRLR
FFBBFFBLRL
BBFBBBBLRL
FBBFFBFLRL
BFFFBFBLRR
FBFFFBBRRL
BBFBFFBRLR
FFBBFBBLRL
FBBBBFFLRL
BFFFFBBRLR
FBFFBBFLRR
FFBFBFFRRR
FFBBFBFLRR
BFFBFFFRRL
FBBFFBFRLR
FBBFBFBLLR
BFBFFBBRRL
FBFFFBFLRR
FBFBBFBLRL
BFFFFBFRLL
BFBFBBBRRR
FFFBFFFLLR
FBBBFFFLRR
FFBFBBFLRL
BFFFFBBLRL
BBFFBFFLRR
FBBFFFFRRR
FFFBFBBLRL
BFFFBFFLRR
BFBBFBFLRL
FBFFBFBRRL
BFBFFFFLRL
FBBFFFBRRR
FFBBFFBRLL
FFBFFBFRLL
BBFBFBBLLR
BFBFBFFLLR
BFFFBBBRRL
BBFBFFFLLR
FBFBFFFLRL
BFFBBFFRRR
BFFBFBBRLR
BBBFFBFLRL
BBFBFFBLRR
BBFBFFFLLL
FFBBBBFLLL
BFBBFBBRRR
BBFFFFBRRL
FFBFFBBRLL
FBBFFFBLRR
FFFFBBBLRL
FFBFBFFLRL
FBBBBFBRRR
BFFBBFBRRR
BFFFBBBLLR
BFFBFBFRLR
BFFBBBFRLL
FFFFBBBLRR
BFBFBBBRLR
BFBFBFFRLL
FFBBFFFRRL
FBBFFBFRRL
BBFFBBFRLL
FBBFFBBRLR
BFBBFFFRRR
BFBBFFBRRL
FBFFFBBRLL
FBBBBBBRRL
FBFFFFBRLR
BFBBFFBLLR
BBFBFFBRRL
BFFBBFFLLR
BFFFFBBRLL
BBFFBFBLLL
FBBFFFFRLR
FBBFFBFLRR
BFFBBFFRLL
BFBBFBBLLL
FBFBFBFLLR
BFFFBBBLRR
BFBFBFBLRL
BBBFFFFRRR
FFBFBFBRLL
FBFFBFFRRR
FFBFFFBRLL
FBBFBBFRRR
FFFBBBFRRR
FBFFBFFRRL
FFBBFFBRRL
FBBBFFFLLR
BBFBBFBRRL
BBFBFFFRRL
FFFBBBBLRL
FBBBFFFRRL
BFBBFFBLRL
FBFFFFFLRR
FBFFBBFLRL
BBFFBBBRRL
BBBFFBBLLL
FBFFBBBRLL
BBBFFFFRLL
FFBBBFFRLR
BBFFFFBRLL
FBFFFBBLLR
BFFBFBFRRR
FBFFBBBLLL
FBFBBBFRLL
BFFFFFBLRR
BFFBBFFLRL
FFBBFBBRRR
FBFFBFFLLR
BFFBBBBLLR
BFFFFFFRRR
BBFBBBFRRR
BBFFFFBLRR
BFFBBFBLLL
FFBBFFBLLL
BBBFFFFRRL
FBBFBBFLRR
FBBFFFBRLR
FBFBBFFLRL
FBFBFFFRLL
FBBFFBBLRL
BFFBBBBRRR
FFFFBBFLLR
BBFFBBBRLR
BFFFFFFRLL
FBBBBBBLLR
BBFFFBBLRR
BFFFFFBLLL
FBBBBFFLLR
BBFBFFFRRR
FBFBFFBLLL
FBFFFFBLLL
FFBFFBFRLR
BFBFFBBLLL
BFFBBFFLRR
FBBBBBFLLL
FFBBBFBLRR
BFFFFFBRLR
BBFBFBBRRL
BBFFFFBRRR
FFFBFBFLRL
FBFBBBBLRR
BFBFFBBRRR
FFBFFFFLLL
BFBFFBFLLR
FBBFBBBRLR
FFFBFFFRLL
FFFBFBFRLR
FFBBBFFLRL
BFFBBBBRLR
FBFFBBFLLL
FFFBBFFLRR
BBFBFBFLLR
FFBBFBFLRL
BBFFBBBLRL
BBFFFFBLLR
FFBFFFBLRR
BFBBFBFLLR
BFBBBBBLLL
BBFBBFBLRL
BBFBFFFRLR
BFFBFFFLLL
BBFBFFBRRR
FBFBBBFRRR
FBBBBFFRLL
BFFBBFBLRL
BBFBFFBLRL
BFBBFFBRRR
BBBFFFFLLL
BFBFFFFRRL
FBFFFFFRRR
BFFFFBBLLL
BFBBFFBRLL
FFBBBBBRLL
BFFBFBBRRR
BFBBFFFLLR
BFBBFBBLLR
FBBBBFBRRL
FBFBFBFLRL
BFBBBBFRLL
FFFBFFBLLL
BFFBFFFLLR
BFBBBFBRLL
FFFBBFBRRL
FFBFBFBRRR
FFFBFBBLLR
BFBBBFBRRR
FBBFBBFRLL
BFBBFBBRRL
BFBBBBFRLR
FFFBBBBLLL
BBFFFBBLLL
FFBBBBFLRL
BFBBBBBRLL
FBBFFBFRLL
FBFFFBBLRL
FBBFBFFRRR
FFFBFBFLLR
FFBBBFFRRL
FBBBFBBRLR
BBFBFFFLRR
FBFBBFFLLL
BBFFBFFRLR
BBFBFFFLRL
FBBBBFFRRR
FFBBBFBLLR
BBBFFFBRRL
FBFBFFFLLR
BBFBFFBLLL
FFFBBFBRLR
FBFFFBFLRL
BFFBFBBLLL
BBFBFBBRLL
FBFFBBFRRL
BFBFFFFRLL
BBBFFBBLRL
FFFBFFBLLR
BFFBFBBRLL
FFBFBFBLRR
BBFBFBFRRL
FBBBFBFRRL
FFFBBBBLLR
FBBBFBBRLL
BFBFBBFLRR
BFFFFFFLLL
FFFBFFFRLR
BFBBBFFRLR
BFFFFFBRLL
FBFFFFFLLR
FBBBFFBRLL
FBBFFBFLLR
BFFBFFBLRR
FBFBBBFLLL
FBFFFFFRRL
BBFFFFBLRL
BFBFFFFRLR
FBBFFFFRRL
BFFBBBBLLL
FFFFBBBRRR
FFBBFBBLRR
FBBFFBFLLL
BFFFFBBRRL
FFBBBBFRRL
BFFFFBFLRR
BFFFBBFRRL
BFBBBFFRRL
BFFFBFFRRR
FBFBBBBRRR
FBFFBFFLRL
FBBBBBFLLR
BFBFBBFLLR
BBBFFBFRRR
BFBBFFBLRR
FBBFBFFRRL
BBFBBFBLLL
BFBBFFBLLL
FFBBBFBRRL
BFBFBFBLLL
BFFBFBFRLL
BBFFBBBLLR
FFFBFBFLLL
FFBBBBFLLR
FFFBFBFRRL
BFBFFFBRRR
FFBFBBFRLL
FFFBBBFLLR
FBBFBFBLLL
BBFFFFFRRR
FFFBFFFRRR
BFFFBBBRRR
FFBFFFFLRL
FFFBFFBLRR
FFBBFBFRLR
FBBFBBBLRR
BFFBBFBRLL
BBFFFBBRRR
FFFFBBFRLR
FBBFBFBRRL
FBFBFFBLLR
FBFBFBBLLR
BFBFBBFRRR
BBFFBFBLLR
FFBBBFFLLL
BBFFBFBRLL
BFFFBBFLRL
BFBFBFFRLR
BFBFFFFLLL
FFBBBFFRRR
BBFBFFBLLR
BFBBBBFLRR
BFFBFBBLRL
FFBBFFFRLL
FFBFFFFLLR
BFBFFFBRRL
BFBFBFFLRL
BFFFFFFLRR
BBFBBFFLRL
FBFFFFBRLL
BBFFBFBRLR
FBBBFFFLLL
FFFBBBFLLL
BFFBFFFRRR
BBFBBBBLLL
BBFFFBFRLR
FBFBFFFRRR
FFFBBFFRLR
BFFBFFBLLR
BBFFBFBLRL
BFBFBFBLLR
FBFFFBFRLL
BBFBBBFRLL
BFBBBBBRLR
BFBFFFBRLR
FFFBBBFLRR
BFBFFBFLRL
BBFBBBBLRR
BFBFBBFRLL
FFFFBBBRLL
BFBBBBBLRR
FBFBBBBRLL
BFBBFBFRRL
BBFFFFBRLR
FBBBFBFRLR
BFBFFBFRRR
FBFBBBBLRL
BFBFBBBLLR
FFBFFFFLRR
FBFBBBFRRL
FBFBFBFRRR
BFFFFFFRLR
FBBBBFFRRL
BFFFFFBRRL
BBBFFFFRLR
FBBBFFBLRL
FBBBFFFLRL
FFFBFFBRLL
BFFFFFFRRL
BBBFFFBLLR
'''

# COMMAND ----------

ids = set()
for seat in inp.split():
  row = int(''.join(str(int(c == 'B')) for c in seat[:7]), 2)
  col = int(''.join(str(int(c == 'R')) for c in seat[7:]), 2)
  ids.add(row * 8 + col)

answer = max(ids)
print(answer)

# COMMAND ----------

# MAGIC %md <article class="day-desc"><h2 id="part2">--- Part Two ---</h2><p><em>Ding!</em> The "fasten seat belt" signs have turned on. Time to find your seat.</p>
# MAGIC <p>It's a completely full flight, so your seat should be the only missing boarding pass in your list.  However, there's a catch: some of the seats at the very front and back of the plane don't exist on this aircraft, so they'll be missing from your list as well.</p>
# MAGIC <p>Your seat wasn't at the very front or back, though; the seats with IDs +1 and -1 from yours will be in your list.</p>
# MAGIC <p><em>What is the ID of your seat?</em></p>
# MAGIC </article>

# COMMAND ----------

for seat in range(max(ids)):
  if seat not in ids and seat - 1 in ids and seat + 1 in ids:
    print(seat)
